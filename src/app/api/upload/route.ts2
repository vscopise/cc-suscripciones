import { NextResponse, NextRequest } from 'next/server'
import { z } from 'zod';
import { parseCSVContent, zcsv } from 'zod-csv'

export async function POST(req: Request) {

    interface MyObject {
        //[key: string]: string[]
        Client?: string[],
        Subscription?: string[]
    }

    const body = await req.json();

    const csv = body.csv.data;

    const key: string = body.item;

    const obj: MyObject = {
        Client: [
            'Nombre',
            'Apellido',
            'Tipo Documento',
            'Número Documento',
            'Número de Contacto',
            'Correo Electrónico',
            'Dirección',
            'Ciudad',
            'Estado',
            'País'
        ],
        Subscription: [
            ''
        ]
    }

    //const mySchema = obj[key]

    const objectSchema = {
        Client: {
            'Nombre': zcsv.string(z.string()),
            'Apellido': zcsv.string(z.string()),
            'Tipo Documento': zcsv.string(z.string()),
            'Número Documento': zcsv.string(z.string()),
            'Número de Contacto': zcsv.string(z.string()),
            'Correo Electrónico': zcsv.string(z.string()),
            'Dirección': zcsv.string(z.string()),
            'Ciudad': zcsv.string(z.string()),
            'Estado': zcsv.string(z.string()),
            'País': zcsv.string(z.string()),
        },
        Subscription: {

        },
    }

    //const cc = obj[key]

    //const schema = z.object(objectSchema[key])


    //Error si no vienen datos
    if (csv.length <= 1) {
        return NextResponse.json('No hay datos suficientes', { status: 200 });
    }

    const test: MyObject = csv[0];
    let value: string[] | undefined;


    //const header1:headers[] = headers[item];

    //Error si el formato no es correcto
    if (key in obj) {
        value = obj[key as keyof MyObject];
        return NextResponse.json('Formato incorrecto', { status: 200 });
    }

    for (let i = 0; i < csv.length; i += 1) {
        console.log(csv[i]);
    }

    //const csvData = data?.json

    //console.log('req')

    //return NextResponse.json({ title: { title } }, { status: 201 });
    return NextResponse.json(csv, { status: 200 });

}